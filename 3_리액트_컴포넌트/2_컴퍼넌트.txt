기존의 웹 프레임워크는 MVC를 활용
정보, 화면, 구동 코드를 분리
코드 관리는 효율적으로 되어왔다.
하지만 MVC간 의존성이 높아서 재활용이 어려움


웹화면은 비슷하며 반복되는 요소가 많다.
뷰를 독립적으로 구성하고
재사용 가능한단위인 컴포넌트 단위로 개발하자

---------------------------------

프로퍼티
- 상위 컴포넌트에서 하위 컴포넌트로 전달되는
- 읽기전용 데이터
- attribute의 형식으로 전달
- 프리미티브 타입, 객체형 모두 가능
- 문자열외의 값은 {}로 감싸서 전달
- 단방향 데이터 전달
- props.children으로 컴포넌트 아래에
- 배치한 jsx에 접근 가능

state
- 컴포넌트의 자체 상태 데이터, 변경 가능
- 값을 저장하거나 변경할 수 있는 객체
- 생성자에서 초기화 필요

- setState를 통해 불변하게 관리해야 함
- setState => render
- setState에서 함수를 인자로 넘겨 
- 이전 state 기반으로 변경 가능

context 
- 부모 컴포넌트에서 생성해서 
- 모든 자식 컴포넌트에 전달하는 데이터

---------------------------------

prop-types로 개발도중에만 prop에 
넘어오는 값의 타입을 체크할 수 있다.

---------------------------------

map함수를 이용해 데이터 => jsx의 배열로 변환
배열로 jsx가 리턴될 때 key를 부여해야 한다.
리액트가 key를 통해 컴포넌트를 구분해
렌더링 성능을 최적화

--------------------------------

props는 읽기전용 데이터를 내려주기만 함
자식 컴포넌트에서 프로퍼티 변경이 불가능?

프로퍼티 변경이 가능한 함수를 props로 전달해서
자식 컴포넌트에서 이를 호출


