비동기 데이터는 언제 리덕스에 도달할지 알 수 없다.
지연되는 와중에 컴포넌트 언마운트되면 데이터가 소실될 수 있다.

비동기 지연 작업을 처리하려면 콜백이 필요하다.
객체 형태의 액션은 이를 처리 불가능하다.
함수형태의 액션으로 구성해야 한다.

redux-thunk는 모든 액션을 검사해서 
만약 함수일 경우 콜백함수형태로 액션을 호출

const thunk = (store) => nextRunner => action => {
    if(typeof action === "function") {
      return action(store.dispatch, store.getState)
    }

    return nextRunner(action)
}